#!/usr/bin/env bash

set -o errexit pipefail

# List all semver tags minus the "v" and sort them; busybox sort doesn't have
# version sort
gettags() {
	git tag \
		| sed -En 's/v(([[:digit:]]+\.){2}[[:digit:]]+)/\1/p' \
		| sort --version-sort
}

# Get SHA of object ref points to
getparentsha() {
	local ref=$1
	git rev-parse --verify "$ref^{}"
}

# Create an annotated tag
createannotatedtag() {
	local tag=$1
	local semvertag=$2

	# Find SHA of object tag points to
	local sha
	sha=$(getparentsha "$semvertag")

	git tag --annotate --message="latest release in $tag" "$tag" "$sha"
	git push --follow-tags
}

# Suppress detached HEAD warning
git config advice.detachedHead false

# Set git name and email
git config --global user.name "github-actions"
git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

# Clobber local tags
git fetch --tags --force

# Build associative array of most recent major and minor releases
declare -A latest

echo "Building tag table..."
while IFS=. read -r major minor patch; do
	latest["v$major"]="v$major.$minor.$patch"
	latest["v$major.$minor"]="v$major.$minor.$patch"
done < <(gettags)

# Move or create tags
for tag in "${!latest[@]}"; do
	echo "Checking $tag..."
	semvertag=${latest["$tag"]}
	if git show-ref --tags --quiet "$tag"; then
		if [[ $(getparentsha "$tag") == $(getparentsha "$semvertag") ]]; then
			echo "$tag already points to same commit as $semvertag, skipping..."
			continue
		fi
		# Delete local and remote tag
		echo "Deleting $tag..."
		git tag --delete "$tag"
		git push --delete origin "$tag"
	fi
	echo "Creating annotated tag $tag pointing to same commit as $semvertag..."
	createannotatedtag "$tag" "$semvertag"
done
